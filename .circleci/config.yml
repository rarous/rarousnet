version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.5
  aws-s3: circleci/aws-s3@3.1.1
  browser-tools: circleci/browser-tools@1.4.1
  cloudflare: katana/cloudflare@1.0.0
  github: topmonks/github@1.4.0
  node: circleci/node@5.1.0
  php: circleci/php@1.1.0
  pulumi: pulumi/pulumi@2.1.0

executors:
  pw-focal-development:
    docker:
      - image: mcr.microsoft.com/playwright:v1.31.2-focal

commands:
  install_browsers:
    steps:
      - restore_cache:
          name: Restore Playwright browsers
          keys:
            - v2-browsers-{{ checksum "cards/package.json" }}
      - run:
          name: Install Playwright browsers
          command: yarn playwright install --with-deps chromium
          working_directory: cards
      - save_cache:
          name: Cache Playwright browsers
          key: v2-browsers-{{ checksum "cards/package.json" }}
          paths:
            - ~/.cache/ms-playwright

jobs:
  provision:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.large
    steps:
      - checkout
      - pulumi/login
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-machine-provision
          override-ci-command: yarn workspaces focus @rarousnet/infrastructure @rarousnet/workers
      - pulumi/update:
          working_directory: infrastructure
          stack: prod
          skip-preview: true
  generate:
    resource_class: large
    docker:
    - image: cimg/clojure:1.11
      environment:
        LEIN_JVM_OPTS: "-Xmx400m"
        JVM_OPTS: "-Xmx3200m"
    steps:
      - checkout
      - php/install-php:
          version: "$(jq --raw-data '.platform.php' generator/composer.lock)"
      - php/install-composer
      - attach_workspace:
          at: .
      - php/install-packages:
          app-dir: ~/project/generator
      - restore_cache:
          name: Restore deps cache
          keys:
            - v3-dependencies-{{ checksum "generator/deps.edn" }}
      - run:
          name: Generate static web site content
          working_directory: generator
          command: clojure -m rarousnet.generator ../
      - save_cache:
          name: Store deps cache
          key: v3-dependencies-{{ checksum "generator/deps.edn" }}
          paths:
            - ~/.m2
            - generator/.cpcache
      - persist_to_workspace:
          root: .
          paths: dist
  postprocess:
    resource_class: large
    executor: pw-focal-development
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-pw
          override-ci-command: yarn workspaces focus rarousnet @rarousnet/cards
      - install_browsers
      - run:
          name: Generate Twitter Card images
          command: |
            mv ./dist/weblog/data.json ./cards
            node ./cards/generator.js "file://`pwd -P`/cards/card.html"
      - run:
          name: Postprocess resources
          command: yarn build:assets
      - persist_to_workspace:
          root: .
          paths: dist
  test:
    resource_class: large
    executor:
      name: node/default
      tag: 'lts-browsers'
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          sudo apt-get update
          sudo apt-get install libnss3-tools
      - browser-tools/install-chrome
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-test
          override-ci-command: yarn workspaces focus rarousnet
      - run:
          name: Install self-signed cert for localhost
          command: |
            mkdir -p $HOME/.pki/nssdb
            echo "Cert path: ./node_modules/lws/ssl/lws-cert.pem"
            certutil -N -d $HOME/.pki/nssdb --empty-password
            certutil -A -d sql:$HOME/.pki/nssdb -t TC -n lws-cert -i ./node_modules/lws/ssl/lws-cert.pem
            certutil -L -d sql:$HOME/.pki/nssdb
      - run:
          name: Serve site content
          command: yarn serve
          background: true
      - run:
          name: Test site with Lighthouse
          command: |
            yarn test:lighthouse
            yarn test:ava
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
  s3_deploy:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-machine-deploy
          override-ci-command: yarn workspaces focus @rarousnet/scripts
      - run: yarn sync
      - cloudflare/purge-cache
  merge_pr:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - github/install
      - github/merge_pr:
          rebase: true
workflows:
  build_and_deploy:
    jobs:
      - generate
      - postprocess:
          requires:
            - generate
      - provision:
          context: aws
          filters:
            branches:
              only: master
      - test:
          requires:
            - postprocess
      - merge_pr:
         context: github-cli
         requires:
           - test
         filters:
           branches:
             only: /revovate\/.*/
      - s3_deploy:
          context:
            - aws
            - cloudflare-invalidation
          requires:
            - provision
            - test
          filters:
            branches:
              only: master
