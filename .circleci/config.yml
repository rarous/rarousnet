version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.4.1
  aws-s3: circleci/aws-s3@2.0.0
  browser-tools: circleci/browser-tools@1.1.3
  cloudflare: katana/cloudflare@1.0.0
  node: circleci/node@5.0.2
  php: circleci/php@1.1.0
  pulumi: pulumi/pulumi@2.0.0
jobs:
  provision:
    executor:
      name: node/default
    steps:
      - checkout
      - pulumi/login
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v1-prod
      - pulumi/update:
          stack: prod
          skip-preview: true
  generate:
    docker:
      - image: circleci/clojure:openjdk-16-tools-deps-buster
        environment:
          LEIN_JVM_OPTS: "-Xmx400m"
          JVM_OPTS: "-Xmx3200m"
    steps:
      - checkout
      - php/install-php
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore deps cache
          keys:
            - v3-dependencies-{{ checksum "generator/deps.edn" }}
      - run:
          name: Generate static web site content
          working_directory: generator
          command: clojure -m rarousnet.generator ../
      - save_cache:
          name: Store deps cache
          key: v3-dependencies-{{ checksum "generator/deps.edn" }}
          paths:
            - ~/.m2
            - generator/.cpcache
      - persist_to_workspace:
          root: .
          paths: dist
  postprocess:
    executor:
      name: node/default
      tag: 'current-browsers'
    steps:
      - checkout
      - browser-tools/install-chrome
      - attach_workspace:
          at: .
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
      - run:
          name: Generate Twitter Card images
          command: |
            mv ./dist/weblog/data.json ./cards
            node ./cards/generator "file://`pwd -P`/cards/card.html"
      - run:
          name: Postprocess resources
          command: yarn build:assets
      - persist_to_workspace:
          root: .
          paths: dist
  test:
    executor:
      name: node/default
      tag: 'current-browsers'
    steps:
      - checkout
      - browser-tools/install-chrome
      - attach_workspace:
          at: .
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
      - run:
          name: Install self-signed cert for localhost
          command: |
            sudo apt-get install libnss3-tools
            mkdir -p $HOME/.pki/nssdb
            certutil -d $HOME/.pki/nssdb -N --empty-password
            certutil -d sql:$HOME/.pki/nssdb -A -t TC -n lws-cert -i ./node_modules/lws/ssl/lws-cert.pem
      - run:
          name: Serve site content
          command: yarn serve
          background: true
      - run:
          name: Test site with Lighthouse
          command: |
            mkdir results
            yarn test:lighthouse
            yarn test:ava
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
  s3_deploy:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: .
      - aws-s3/sync:
          arguments: |
            --size-only \
            --quiet
          from: dist/
          to: s3://www.rarous.net/
      - aws-s3/copy:
          arguments: |
            --exclude "*" \
            --include "*.rss" \
            --content-type="application/rss+xml; charset=utf-8" \
            --metadata-directive="REPLACE" \
            --recursive
          from: s3://www.rarous.net/
          to: s3://www.rarous.net/
      - cloudflare/purge-cache
workflows:
  build_and_deploy:
    jobs:
      - generate
      - postprocess:
          requires:
            - generate
      - provision:
          context: aws
          filters:
            branches:
              only: master
      - test:
          requires:
            - postprocess
      - s3_deploy:
          context: aws
          requires:
            - provision
            - test
          filters:
            branches:
              only: master
